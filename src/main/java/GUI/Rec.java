/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import com.mycompany.pharmacy.Container;
import com.mycompany.pharmacy.Customer;
import com.mycompany.pharmacy.Doctor;
import com.mycompany.pharmacy.Inventory;
import com.mycompany.pharmacy.Product;
import com.mycompany.pharmacy.Receipt;
import static com.mycompany.pharmacy.fileManagement.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author skmr
 */
public class Rec extends javax.swing.JFrame {

    /**
     * Creates new form Rec
     */
//    Inventory inventory = new Inventory();
    Customer customer;
    Doctor doctor;
    ArrayList<Integer> quantityList = new ArrayList();
    ArrayList<Product> productList = new ArrayList();
    double totalCost = 0;
    public Rec() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addToCartBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        customerPhone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        doctorPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        serialNo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        receiptArea = new javax.swing.JTextArea();
        generateBtn = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        doctorTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(230, 224, 212));

        addToCartBtn.setBackground(new java.awt.Color(71, 48, 31));
        addToCartBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addToCartBtn.setForeground(new java.awt.Color(245, 244, 239));
        addToCartBtn.setLabel("Add to cart");
        addToCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartBtnActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(71, 48, 31));
        refreshBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(245, 244, 239));
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Stencil", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(71, 48, 31));
        jLabel1.setText("receipt management");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(133, 96, 96));
        jLabel2.setText("Inventory");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(133, 96, 96));
        jLabel3.setText("Customers");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(133, 96, 96));
        jLabel4.setText("Doctors");

        customerPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        customerPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerPhoneActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(71, 48, 31));
        jLabel5.setText("Customer Phone number:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(71, 48, 31));
        jLabel6.setText("Doctor Phone number:");

        doctorPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(71, 48, 31));
        jLabel7.setText("Product serial number:");

        serialNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        serialNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialNoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(71, 48, 31));
        jLabel8.setText("Product Quantity:");

        quantity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        receiptArea.setColumns(20);
        receiptArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        receiptArea.setRows(5);
        jScrollPane4.setViewportView(receiptArea);

        generateBtn.setBackground(new java.awt.Color(71, 48, 31));
        generateBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        generateBtn.setForeground(new java.awt.Color(245, 244, 239));
        generateBtn.setText("Generate");
        generateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBtnActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(71, 48, 31));
        back.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        back.setForeground(new java.awt.Color(245, 244, 239));
        back.setText("Back");
        back.setBorderPainted(false);
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        doctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Phone"
            }
        ));
        jScrollPane5.setViewportView(doctorTable);

        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Serial No", "Price", "Quantity"
            }
        ));
        jScrollPane6.setViewportView(inventoryTable);

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Phone", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(customerTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doctorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serialNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(addToCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(generateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(back)
                        .addGap(133, 133, 133)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctorPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serialNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addToCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void addToCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartBtnActionPerformed
        String custPhone = customerPhone.getText();
        String docPhone = doctorPhone.getText();
        String proSNo = serialNo.getText();
        String q = quantity.getText();
        Product product;
        
        
        if (!(custPhone.matches("\\d{11}"))){
            JOptionPane.showMessageDialog(this, "Enter a valid Customer Number, Please.", "WARNING", JOptionPane.WARNING_MESSAGE);
        }
        else if (!Container.customerByPhone.containsKey(custPhone)){
            JOptionPane.showMessageDialog(this, "Customer not found", "WARNING", JOptionPane.WARNING_MESSAGE);
        }
        else if (!(docPhone.matches("\\d{11}"))){
            JOptionPane.showMessageDialog(this, "Enter a valid Doctor Number, Please.", "WARNING", JOptionPane.WARNING_MESSAGE);
        }
        else if (!Container.doctorByPhone.containsKey(docPhone)){
            JOptionPane.showMessageDialog(this, "Doctor not found", "WARNING", JOptionPane.WARNING_MESSAGE);
        }
        else if(!proSNo.matches("[0-9]+")){
            JOptionPane.showMessageDialog(this, "Enter a Valid Serial Number, Please.", "WARNING", JOptionPane.WARNING_MESSAGE);
        }
        else if (!Container.productBySerial.containsKey(Integer.parseInt(proSNo))){
            JOptionPane.showMessageDialog(this, "Product not found", "WARNING", JOptionPane.WARNING_MESSAGE);
        }
        else if(!q.matches("[0-9]+")){
            JOptionPane.showMessageDialog(this, "Enter Integer Number of Quantity, Please.", "WARNING", JOptionPane.WARNING_MESSAGE);
        }
        else{
            customer = Container.customerByPhone.get(custPhone);
            doctor = Container.doctorByPhone.get(docPhone);
            product = Container.productBySerial.get(Integer.parseInt(proSNo));
            int proQuantity = product.getQuantity();
            if(proQuantity >= Integer.parseInt(q)){
                product.reduceQuantity(Integer.parseInt(q));
                totalCost += product.getPrice() * Integer.parseInt(q);
                productList.add(product);
                quantityList.add(Integer.parseInt(q));
                serialNo.setText("");
                quantity.setText("");
                customerPhone.enableInputMethods(false);
                doctorPhone.enableInputMethods(false);
            }
            else{
                JOptionPane.showMessageDialog(this, "Not enough stock available", "WARNING", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_addToCartBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
    
        
    DefaultTableModel customerModel = new DefaultTableModel(new String[]{"Name", "Phone", "Address"}, 0);
    for (Customer c : Container.customers) {
        customerModel.addRow(new Object[]{c.getCustomerName(), c.getCustomerPhoneNumber(), c.getAddress()});
    }
    customerTable.setModel(customerModel);
     DefaultTableModel doctorModel = new DefaultTableModel(new String[]{"Name", "Phone"}, 0);
    for (Doctor d : Container.doctors) {
        doctorModel.addRow(new Object[]{d.getDoctorName(), d.getDoctorPhoneNumber()});
    }
    doctorTable.setModel(doctorModel);
    DefaultTableModel inventoryModel = new DefaultTableModel(new String[]{"Name", "SerialNo", "Price", "Quantity"}, 0);
    Iterator<Integer> keySetIterator = Container.productBySerial.keySet().iterator();
    while (keySetIterator.hasNext()) {
        Integer key = keySetIterator.next();
        Product product = Container.productBySerial.get(key);
        inventoryModel.addRow(new Object[]{product.getProductName(), key, product.getPrice(), product.getQuantity()});
    }
    inventoryTable.setModel(inventoryModel);

//        textAreaCust.setText("");
//        for (Customer c : Container.customers) {
//        textAreaCust.append("Name: " + c.getCustomerName() + ", Phone: " + c.getCustomerPhoneNumber() + ", Address: " + c.getAddress() + "\n");
//        }
//        textAreaDoc.setText("");
//        for (Doctor d : Container.doctors) {
//            textAreaDoc.append("Name: " + d.getDoctorName() + ", Phone: " + d.getDoctorPhoneNumber() + "\n");
//        }
//        textAreaInv.setText("");
//        Iterator<Integer> keySetIterator = Container.productBySerial.keySet().iterator();
//        while(keySetIterator.hasNext()) {
//            Integer key = keySetIterator.next();
//            textAreaInv.append("Product Name: " + Container.productBySerial.get(key).getProductName());
//            textAreaInv.append(", Serial number: " + key);
//            textAreaInv.append(", Price: " + Container.productBySerial.get(key).getPrice());
//            textAreaInv.append(", quantity: " + Container.productBySerial.get(key).getQuantity() + "\n");
//        }
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void customerPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerPhoneActionPerformed

    private void serialNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serialNoActionPerformed

    private void generateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBtnActionPerformed
        receiptArea.setText("");
        if(productList.isEmpty()){
            receiptArea.setText("Input Error");
        }
        else{
//            customerPhone.enableInputMethods(true);
//            doctorPhone.enableInputMethods(true);

//            Iterator<String> keySetIterator = Container.receipt.keySet().iterator();
//            while(keySetIterator.hasNext()) {
//                String key = keySetIterator.next();
//                receiptArea.append(Container.receipt.get(key).toString() + "\n");
//            }
//            receiptArea.append("customer:\n");
//            receiptArea.append(customer.toString());
//            receiptArea.append("\ndoctor:\n");
//            receiptArea.append(doctor.toString());
//            for(int i = 0; i < productList.size(); i++){
//                receiptArea.append("\n" + productList.get(i).toString() + "\n");
//            }
//            for(int i = 0; i < quantityList.size(); i++){
//                receiptArea.append("\n" + quantityList.get(i).toString() + "\n");
//            }
//            receiptArea.append("totalCost: \n" + totalCost);
            Receipt receipt = new Receipt(customer.getCustomerName(),doctor.getDoctorName(),productList, quantityList, totalCost);
            Customer cust = Container.customerByPhone.get(customer.getCustomerPhoneNumber());
            customer.addToTotalSpent(totalCost);
            cust.addToTotalSpent(totalCost);
            customer.addReceipt(receipt);
            cust.addReceipt(receipt);
//            Container.customerByPhone.(customer.getCustomerPhoneNumber(), customer);
            receiptArea.append("\tReceipt\n");
            receiptArea.append("Date: " + receipt.getDate() + "\n");
            receiptArea.append("Customer Name: " + receipt.getCustomerName() + "\n");
            receiptArea.append("Doctor: " + receipt.getDoctorName() + "\n");
            receiptArea.append("Items Purchased:\n");
//            if (receipt != null && receipt.getProducts() != null && receipt.getQuantities() != null) {
//            if (receipt.getProducts().size() == receipt.getQuantities().size()) {
//                for (int i = 0; i < receipt.getProducts().size(); i++) {
//                    receiptArea.append(receipt.getProducts().get(i).getProductName() + "\n");
//                    receiptArea.append(" : Quantity= " + receipt.getQuantities().get(i) +
//                            ", Price= $" + receipt.getProducts().get(i).getPrice() + "\n");
//                }
//            } else {
//                receiptArea.append("Error: List sizes do not match.\n");
//            }
//        } else {
//            receiptArea.append("Error: Receipt data is missing.\n");
//        }
        List<Product> products = receipt.getProducts();
        List<Integer> quantities = receipt.getQuantities();
        
//        for(Product p : products){
//            receiptArea.append("test p: " + p.toString() + "\n");
//        }
//        for(Integer i : quantities){
//            receiptArea.append("test q: " + i + "\n");
//        }
        
        for (int i = 0; i < products.size(); i++) {
            Product product = products.get(i);
            int quantity = quantities.get(i);
            receiptArea.append(product.getProductName() + " - Quantity: " + quantity + ", Price: $" + product.getPrice() + "\n");
        }
            receiptArea.append("Total Cost: $" + receipt.getTotalCost());
            receiptArea.append("\n\t----------------");
            if (customer.getTotalSpent() > 500) {
                receiptArea.append("\nYou have 5% discount!\n");
                customer.discount(true);
            }
            productList.clear();
            quantityList.clear();
            totalCost = 0;
        }
    }//GEN-LAST:event_generateBtnActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        begin begin = new begin();
        begin.setVisible(true);
        dispose();
    }//GEN-LAST:event_backActionPerformed

    public static void start(){
    read_CustomerFromTheFile();
    read_DoctorFromTheFile();
    read_ProductFromTheFile();
    read_ReceiptFromTheFile();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rec().setVisible(true);
                start();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCartBtn;
    private javax.swing.JButton back;
    private javax.swing.JTextField customerPhone;
    private javax.swing.JTable customerTable;
    private javax.swing.JTextField doctorPhone;
    private javax.swing.JTable doctorTable;
    private javax.swing.JButton generateBtn;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextArea receiptArea;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField serialNo;
    // End of variables declaration//GEN-END:variables
}
